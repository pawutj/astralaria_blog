---
import YukinaConfig from "../../yukina.config";
import { GetCoverURLForUnspecifiedEntry } from "../utils/cover";

export interface Props {
  title?: string;
  subTitle?: string;
  bannerImage?: string;
  slug?: string;
}
const { title, subTitle, bannerImage, slug } = Astro.props;

const hasTitle = title !== undefined || subTitle !== undefined;
const hasHeaderImg = bannerImage !== undefined || slug !== undefined;

// Use only the first banner image for better performance
const bannerImg = YukinaConfig.banners[0];
---

<div id="banner" class="banner onload-animation-fade-in">
  <div class="transition-main banner-inner h-full w-full">
    {
      !hasHeaderImg && (
        <div class="static-banner">
          <div
            class="banner-image"
            style={{ backgroundImage: `url(${bannerImg})` }}
          />
        </div>
      )
    }
    {
      hasHeaderImg && (
        <div class="cover">
          <img
            class="cover-image"
            src={bannerImage ?? GetCoverURLForUnspecifiedEntry(slug ?? "")}
            alt="PostCover"
            loading="eager"
            fetchpriority="high"
            decoding="sync"
          />
        </div>
      )
    }
    <div class="relative h-[95%] w-full">
      <div
        class="absolute left-1/2 top-1/2 w-4/5 -translate-x-1/2 -translate-y-1/2 lg:w-3/4"
      >
        <div class="flex flex-col">
          <h1
            class:list={[hasTitle ? "title-normal" : "title-index"]}
            class="title"
          >
            {title ?? YukinaConfig.title}
          </h1>
          <h2 class="subtitle">{subTitle ?? YukinaConfig.subTitle}</h2>
        </div>
      </div>
    </div>
  </div>
  <div class="waves" id="header-waves">
    <svg
      class="waves"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      viewBox="0 24 150 28"
      preserveAspectRatio="none"
      shape-rendering="auto"
    >
      <defs>
        <path
          id="gentle-wave"
          d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"
        >
        </path>
      </defs>
      <g class="parallax">
        <use
          xlink:href="#gentle-wave"
          x="48"
          y="0"
          class="opacity-25"
          style={{ animationDelay: "-2s", animationDuration: "7s" }}></use>
        <use
          xlink:href="#gentle-wave"
          x="48"
          y="3"
          class="opacity-50"
          style={{ animationDelay: "-3s", animationDuration: "10s" }}></use>
        <use
          xlink:href="#gentle-wave"
          x="48"
          y="5"
          class="opacity-75"
          style={{ animationDelay: "-4s", animationDuration: "13s" }}></use>
        <use
          xlink:href="#gentle-wave"
          x="48"
          y="7"
          style={{ animationDelay: "-5s", animationDuration: "20s" }}></use>
      </g>
    </svg>
  </div>
</div>

<style>
  .banner {
    @apply relative h-[calc(var(--banner-height)*3/4)] opacity-100 lg:h-[var(--banner-height)];
  }

  .static-banner {
    @apply absolute left-0 top-0 -z-10 block h-[calc(var(--banner-height)*3/4)] w-full overflow-hidden bg-white lg:h-[var(--banner-height)];
  }

  .static-banner::before {
    @apply absolute left-0 top-0 z-10 block h-full w-full bg-black/25 transition-all content-[''];
    @apply dark:bg-black/30;
  }

  .banner-image {
    @apply h-full w-full bg-cover bg-center bg-no-repeat;
  }

  .cover {
    @apply absolute left-0 top-0 z-0 block h-[var(--banner-height)] w-full overflow-hidden bg-white;
  }

  .cover::before {
    @apply absolute left-0 top-0 z-10 block h-full w-full bg-black/25 transition-all content-[''];
    @apply dark:bg-black/30;
  }

  .cover-image {
    @apply h-full w-full object-cover;
  }

  .title {
    @apply mt-8 text-center font-bold text-[var(--title-color)] drop-shadow-lg lg:mt-1;
    font-family: var(--title-font);
  }

  .title-index {
    @apply mb-0 text-6xl leading-[5rem] lg:mb-1 lg:text-8xl;
  }

  .title-normal {
    @apply mb-1 text-3xl lg:text-5xl;
  }

  .subtitle {
    @apply text-center text-xl text-[var(--subtitle-color)] drop-shadow-md lg:text-3xl;
    font-family: var(--subtitle-font);
  }

  .waves {
    @apply absolute -bottom-[1px] h-[10vh] max-h-[9.375rem] min-h-[3.125rem] w-full;
    @apply md:h-[15vh];
  }

  .waves > .parallax use {
    @apply fill-[var(--background-color)];
    animation: wave 25s cubic-bezier(0.5, 0.5, 0.45, 0.5) infinite;
  }

  @keyframes wave {
    0% {
      transform: translate3d(-90px, 0, 0);
    }
    100% {
      transform: translate3d(85px, 0, 0);
    }
  }
</style>
